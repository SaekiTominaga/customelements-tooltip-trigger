{"version":3,"sources":["TooltipTrigger.mjs"],"names":["_ZINDEX_LIMIT","_supportCSSTypedOM","_annotateElement","_tooltipElement","_tooltipCustomElementName","_TOOLTIP_ID_PLEFIX","_MOUSELEAVE_HIDE_DELAY","_mouseleaveHideTimeoutId","_tooltipInnerElement","_tooltipCloseText","_tooltipCloseSrc","__classPrivateFieldSet","this","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","DocumentId","DocumentZindex","TooltipTrigger","HTMLAnchorElement","[object Object]","super","undefined","attributeStyleMap","setAttribute","href","URL","hash","origin","location","pathname","Error","annotateElement","document","getElementById","substring","tooltipCustomElementName","dataset","tooltipElement","includes","tooltipCloseText","tooltipCloseSrc","addEventListener","_mouseEnterEvent","passive","_mouseLeaveEvent","_clickEvent","remove","removeEventListener","_show","setTimeout","_hide","ev","focus","preventDefault","createElement","id","alphalower","alphaupper","number","symbol","generate","body","appendChild","tooltipInnerElement","tabIndex","slot","insertAdjacentHTML","innerHTML","style","outline","_create","clearTimeout","triggerBoundingClientRect","getBoundingClientRect","zIndex","getMaximum","CSS","px","Math","round","bottom","add","window","pageYOffset","documentElement","scrollWidth","left","offsetWidth","right","top","String","removeAttribute","WeakMap"],"mappings":"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","file":"TooltipTrigger.min.mjs","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _ZINDEX_LIMIT, _supportCSSTypedOM, _annotateElement, _tooltipElement, _tooltipCustomElementName, _TOOLTIP_ID_PLEFIX, _MOUSELEAVE_HIDE_DELAY, _mouseleaveHideTimeoutId, _tooltipInnerElement, _tooltipCloseText, _tooltipCloseSrc;\nimport DocumentId from '/customelements-tooltip-trigger/node_modules/@saekitominaga/document-generate-id/dist/DocumentId.mjs';\nimport DocumentZindex from '/customelements-tooltip-trigger/node_modules/@saekitominaga/document-maximum-zindex/dist/DocumentZindex.mjs';\n/**\n * Tooltip trigger\n *\n * @version 1.0.0\n */\nexport default class TooltipTrigger extends HTMLAnchorElement {\n    constructor() {\n        super();\n        _ZINDEX_LIMIT.set(this, 2147483647); // z-index の最大値\n        _supportCSSTypedOM.set(this, void 0); // CSS Typed Object Model に対応しているか（Chrome 66+, Chromium Edge） https://caniuse.com/mdn-api_element_attributestylemap\n        _annotateElement.set(this, null); // ツールチップの内容をここからコピーする\n        _tooltipElement.set(this, null);\n        _tooltipCustomElementName.set(this, 'x-tooltip');\n        _TOOLTIP_ID_PLEFIX.set(this, 'tooltip-'); // ツールチップに設定する ID の接頭辞\n        _MOUSELEAVE_HIDE_DELAY.set(this, 250); // mouseleave 時にツールチップを非表示にする遅延時間（ミリ秒）\n        _mouseleaveHideTimeoutId.set(this, null); // ツールチップを非表示にする際のタイマーの識別ID（clearTimeout() で使用）\n        _tooltipInnerElement.set(this, null);\n        _tooltipCloseText.set(this, void 0);\n        _tooltipCloseSrc.set(this, void 0);\n        __classPrivateFieldSet(this, _supportCSSTypedOM, this.attributeStyleMap !== undefined);\n        this.setAttribute('role', 'button');\n        this.setAttribute('aria-expanded', 'false');\n    }\n    connectedCallback() {\n        const href = new URL(this.href);\n        const hash = href.hash;\n        if (href.origin !== location.origin || href.pathname !== location.pathname || hash === '') {\n            throw new Error('Attribute: `href` is not set or the value is invalid.');\n        }\n        const annotateElement = document.getElementById(hash.substring(1));\n        if (annotateElement === null) {\n            throw new Error(`Element: ${hash} can not found.`);\n        }\n        __classPrivateFieldSet(this, _annotateElement, annotateElement);\n        const tooltipCustomElementName = this.dataset.tooltipElement;\n        if (tooltipCustomElementName !== undefined) {\n            if (!tooltipCustomElementName.includes('-')) {\n                throw new Error('Attribute: `data-tooltip-element` value must contain a hyphen.');\n            }\n            __classPrivateFieldSet(this, _tooltipCustomElementName, tooltipCustomElementName);\n        }\n        const tooltipCloseText = this.dataset.tooltipCloseText;\n        if (tooltipCloseText === '') {\n            throw new Error('Attribute: `data-tooltip-close-text` value cannot be empty.');\n        }\n        __classPrivateFieldSet(this, _tooltipCloseText, tooltipCloseText);\n        const tooltipCloseSrc = this.dataset.tooltipCloseSrc;\n        if (tooltipCloseSrc === '') {\n            throw new Error('Attribute: `data-tooltip-close-src` value cannot be empty.');\n        }\n        __classPrivateFieldSet(this, _tooltipCloseSrc, tooltipCloseSrc);\n        this.addEventListener('mouseenter', this._mouseEnterEvent, { passive: true });\n        this.addEventListener('mouseleave', this._mouseLeaveEvent, { passive: true });\n        this.addEventListener('click', this._clickEvent);\n    }\n    disconnectedCallback() {\n        __classPrivateFieldGet(this, _tooltipElement)?.remove();\n        this.removeEventListener('mouseenter', this._mouseEnterEvent);\n        this.removeEventListener('mouseleave', this._mouseLeaveEvent);\n        this.removeEventListener('click', this._clickEvent);\n    }\n    _mouseEnterEvent() {\n        this._show();\n    }\n    _mouseLeaveEvent() {\n        __classPrivateFieldSet(this, _mouseleaveHideTimeoutId, setTimeout(() => {\n            this._hide();\n        }, __classPrivateFieldGet(this, _MOUSELEAVE_HIDE_DELAY)));\n    }\n    _clickEvent(ev) {\n        this._show();\n        __classPrivateFieldGet(this, _tooltipInnerElement)?.focus();\n        ev.preventDefault();\n    }\n    /**\n     * ツールチップを生成する\n     */\n    _create() {\n        /* ツールチップのラッパー要素 */\n        const tooltipElement = document.createElement(__classPrivateFieldGet(this, _tooltipCustomElementName));\n        tooltipElement.id = new DocumentId(10, {\n            alphalower: true,\n            alphaupper: true,\n            number: true,\n            symbol: '',\n        }, __classPrivateFieldGet(this, _TOOLTIP_ID_PLEFIX)).generate();\n        if (__classPrivateFieldGet(this, _tooltipCloseSrc) !== undefined) {\n            tooltipElement.setAttribute('close-src', __classPrivateFieldGet(this, _tooltipCloseSrc));\n        }\n        if (__classPrivateFieldGet(this, _tooltipCloseText) !== undefined) {\n            tooltipElement.setAttribute('close-text', __classPrivateFieldGet(this, _tooltipCloseText));\n        }\n        document.body.appendChild(tooltipElement);\n        __classPrivateFieldSet(this, _tooltipElement, tooltipElement);\n        const tooltipInnerElement = document.createElement('div');\n        tooltipInnerElement.tabIndex = -1;\n        tooltipInnerElement.slot = 'tooltip';\n        tooltipInnerElement.insertAdjacentHTML('afterbegin', __classPrivateFieldGet(this, _annotateElement).innerHTML); // TODO HTML 中に id 属性が設定されていた場合、ページ中に ID が重複してしまう\n        if (__classPrivateFieldGet(this, _supportCSSTypedOM)) {\n            tooltipInnerElement.attributeStyleMap.set('outline', 'none');\n        }\n        else {\n            tooltipInnerElement.style.outline = 'none';\n        }\n        tooltipElement.appendChild(tooltipInnerElement);\n        __classPrivateFieldSet(this, _tooltipInnerElement, tooltipInnerElement);\n        /* ツールチップにイベントを設定する */\n        tooltipElement.addEventListener('mouseenter', () => {\n            this._show();\n        }, { passive: true });\n        tooltipElement.addEventListener('mouseleave', () => {\n            this._hide();\n        }, { passive: true });\n    }\n    /**\n     * ツールチップを表示する\n     */\n    _show() {\n        if (__classPrivateFieldGet(this, _tooltipElement) === null) {\n            /* 初回表示時はツールチップの生成を行う */\n            this._create();\n        }\n        if (__classPrivateFieldGet(this, _mouseleaveHideTimeoutId) !== null) {\n            clearTimeout(__classPrivateFieldGet(this, _mouseleaveHideTimeoutId));\n        }\n        const tooltipElement = __classPrivateFieldGet(this, _tooltipElement);\n        this.setAttribute('aria-expanded', 'true');\n        this.setAttribute('aria-describedby', tooltipElement.id);\n        tooltipElement.setAttribute('open', '');\n        /* 表示位置を設定する */\n        const triggerBoundingClientRect = this.getBoundingClientRect();\n        let zIndex = new DocumentZindex().getMaximum() + 1; // z-index 値\n        if (zIndex > __classPrivateFieldGet(this, _ZINDEX_LIMIT)) {\n            zIndex = __classPrivateFieldGet(this, _ZINDEX_LIMIT);\n        }\n        if (__classPrivateFieldGet(this, _supportCSSTypedOM)) {\n            /* いったんリセット */\n            tooltipElement.attributeStyleMap.set('left', 'auto');\n            tooltipElement.attributeStyleMap.set('right', 'auto');\n            /* トリガー要素の左下を基準に左上を合わせる */\n            tooltipElement.attributeStyleMap.set('top', CSS.px(Math.round(triggerBoundingClientRect.bottom)).add(CSS.px(window.pageYOffset)));\n            if (document.documentElement.scrollWidth - triggerBoundingClientRect.left < tooltipElement.offsetWidth) {\n                tooltipElement.attributeStyleMap.set('right', '0');\n            }\n            else {\n                tooltipElement.attributeStyleMap.set('left', CSS.px(Math.round(triggerBoundingClientRect.left)));\n            }\n            tooltipElement.attributeStyleMap.set('z-index', zIndex);\n        }\n        else {\n            /* いったんリセット */\n            tooltipElement.style.left = 'auto';\n            tooltipElement.style.right = 'auto';\n            /* トリガー要素の左下を基準に左上を合わせる */\n            tooltipElement.style.top = `${String(Math.round(triggerBoundingClientRect.bottom) + window.pageYOffset)}px`;\n            if (document.documentElement.scrollWidth - triggerBoundingClientRect.left < tooltipElement.offsetWidth) {\n                tooltipElement.style.right = '0';\n            }\n            else {\n                tooltipElement.style.left = `${String(Math.round(triggerBoundingClientRect.left))}px`;\n            }\n            tooltipElement.style.zIndex = String(zIndex);\n        }\n    }\n    /**\n     * ツールチップの非表示処理を行う\n     */\n    _hide() {\n        const tooltipElement = __classPrivateFieldGet(this, _tooltipElement);\n        this.setAttribute('aria-expanded', 'false');\n        this.removeAttribute('aria-describedby');\n        tooltipElement.removeAttribute('open');\n    }\n}\n_ZINDEX_LIMIT = new WeakMap(), _supportCSSTypedOM = new WeakMap(), _annotateElement = new WeakMap(), _tooltipElement = new WeakMap(), _tooltipCustomElementName = new WeakMap(), _TOOLTIP_ID_PLEFIX = new WeakMap(), _MOUSELEAVE_HIDE_DELAY = new WeakMap(), _mouseleaveHideTimeoutId = new WeakMap(), _tooltipInnerElement = new WeakMap(), _tooltipCloseText = new WeakMap(), _tooltipCloseSrc = new WeakMap();\n"]}